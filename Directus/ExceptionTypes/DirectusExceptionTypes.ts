import { GraphQLError} from "graphql";

type FORBIDDEN_EX = "FORBIDDEN"
type FAILED_VALIDATION_EX = "FAILED_VALIDATION"
type INVALID_TOKEN_EX = "INVALID_TOKEN"
type TOKEN_EXPIRED_EX = "TOKEN_EXPIRED"
type INVALID_CREDENTIALS_EX = "INVALID_CREDENTIALS"
type INVALID_IP_EX = "INVALID_IP"
type INVALID_OTP_EX = "INVALID_OTP"
type INVALID_PAYLOAD_EX = "INVALID_PAYLOAD"
type INVALID_QUERY_EX = "INVALID_QUERY"
type UNSUPPORTED_MEDIA_TYPE_EX = "UNSUPPORTED_MEDIA_TYPE"
type REQUESTS_EXCEEDED_EX = "REQUESTS_EXCEEDED"
type ROUTE_NOT_FOUND_EX = "ROUTE_NOT_FOUND"
type SERVICE_UNAVAILABLE_EX = "SERVICE_UNAVAILABLE"
type UNPROCESSABLE_ENTITY_EX = "UNPROCESSABLE_ENTITY"


type IDirectusExceptionCodes = {
    code?:  FORBIDDEN_EX | 
    FAILED_VALIDATION_EX | 
    INVALID_TOKEN_EX | 
    TOKEN_EXPIRED_EX | 
    INVALID_CREDENTIALS_EX | 
    INVALID_IP_EX |
    INVALID_OTP_EX |
    INVALID_PAYLOAD_EX | 
    INVALID_QUERY_EX | 
    UNSUPPORTED_MEDIA_TYPE_EX | 
    REQUESTS_EXCEEDED_EX | 
    ROUTE_NOT_FOUND_EX | 
    SERVICE_UNAVAILABLE_EX | 
    UNPROCESSABLE_ENTITY_EX
}
   
class DirectusGraphQlError extends GraphQLError{
    readonly extensions: IDirectusExceptionCodes;
}

export type IDirectusGraphQlErrors = 
    ReadonlyArray<DirectusGraphQlError>

